<?xml version="1.0"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
                       xmlns:mx="library://ns.adobe.com/flex/mx"
                       close="{onClose(event)}"
                       creationComplete="{init()}">
    <fx:Script><![CDATA[
        import com.dborisenko.api.twitter.TwitterAPI;

        import com.dborisenko.api.twitter.commands.search.Search;
        import com.dborisenko.api.twitter.data.TwitterStatus;
        import com.dborisenko.api.twitter.events.TwitterEvent;
        import com.dborisenko.api.twitter.net.TwitterOperation;
        import com.dborisenko.api.twitter.oauth.events.OAuthTwitterEvent;

        import mx.collections.ArrayCollection;

        import spark.events.IndexChangeEvent;

        import wall.OutWindow;

        public static const SEARCH_KEAYWORD = "kisobran";
        public static const SEARCH_INTERVAL:int = 30000;
        protected static const CONSUMER_KEY:String = "SLEi3Ey9IDfBDwPciH0Z4Q";
        protected static const CONSUMER_SECRET:String = "OrBW3SKDBYwIEhFHhYyMPSV7wj35C8kNPfku8LLu0";

        var wallWindow:OutWindow = new OutWindow();
        var searchTimer:Timer;
        var twitterApi:TwitterAPI = new TwitterAPI();
        var op:TwitterOperation = new Search(SEARCH_KEAYWORD);

        private function init():void {
            initTwitter();
            wallWindow.open(true);

        }

        private function initSearchTimer():void {
            searchTimer = new Timer(SEARCH_INTERVAL);
            searchTimer.addEventListener(TimerEvent.TIMER, timer_timer);
            searchTimer.start();
        }


        private function initTwitter():void {
            twitterApi.connection.addEventListener(OAuthTwitterEvent.REQUEST_TOKEN_RECEIVED, handleRequestTokenReceived);
            twitterApi.connection.addEventListener(OAuthTwitterEvent.REQUEST_TOKEN_ERROR, handleRequestTokenError);
            twitterApi.connection.addEventListener(OAuthTwitterEvent.ACCESS_TOKEN_ERROR, handleAccessTokenError);
            twitterApi.connection.addEventListener(OAuthTwitterEvent.AUTHORIZED, handleAuthorized);
            twitterApi.connection.authorize(CONSUMER_KEY, CONSUMER_SECRET);

        }

        private function timer_timer(evt:TimerEvent):void {
            doSearch();
        }

        [Bindable]
        private var twitterStatusCollection:ArrayCollection = new ArrayCollection();

        [Bindable]
        public var fontSize:ArrayCollection = new ArrayCollection([
            {label:"14", data:14},
            {label:"16", data:16},
            {label:"18", data:18}
        ]);

        private function searchResult(data:ArrayCollection):void {

            twitterStatusCollection.removeAll();
            for each(var status:TwitterStatus in data) {
                if (status.text.search("#kisobran") > 0) {
                    twitterStatusCollection.addItem(status);
                }
            }
            wallWindow.setTwitts(twitterStatusCollection);
        }

        private function onChangeTextColor(event:Event) {
            wallWindow.changeTextColor(cp.selectedColor);
        }

        private function onChangeHasheColor(event:Event) {
            wallWindow.changeHashColor(cpFont.selectedColor);
        }

        private function onClose(event:Event) {
            wallWindow.close();
        }

        protected function handleRequestTokenReceived(event:OAuthTwitterEvent):void {
            doSearch();
            initSearchTimer();
        }

        private function doSearch():void {
            op.addEventListener(TwitterEvent.COMPLETE, searchHandler);
            twitterApi.post(op);
        }

        private function searchHandler(evt:TwitterEvent):void {
            op.removeEventListener(TwitterEvent.COMPLETE, searchHandler);
            searchResult(evt.data.results);
        }

        protected function handleRequestTokenError(event:OAuthTwitterEvent):void {
            trace("");
        }

        protected function handleAccessTokenError(event:OAuthTwitterEvent):void {
            trace("");
        }

        protected function handleAuthorized(event:OAuthTwitterEvent):void {
            trace("");

        }
        ]]>
    </fx:Script>
    <s:VGroup paddingLeft="50" paddingRight="50" paddingTop="15">

        <s:HGroup>
            <mx:ColorPicker id="cp" showTextField="true" selectedColor="0xFFFFFF"/>
            <s:Button click="onChangeTextColor(event)" id="btnChangeColor" label="Change font color"/>
        </s:HGroup>
        <s:HGroup>
            <s:VGroup>
                <s:Label text="Hash control:"/>
                <s:HGroup>
                    <mx:ColorPicker id="cpFont" showTextField="true" selectedColor="0xFFFFFF"/>
                    <s:Button click="onChangeHasheColor(event)" id="btnChangeFontColor"
                              label="Change hash color"/>
                </s:HGroup>
            </s:VGroup>

        </s:HGroup>
    </s:VGroup>
</s:WindowedApplication>
